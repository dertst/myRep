float equal(char *space, char * protspace)
{
	float persent=0;
	for (int i = 0; i < strlen(space); i++)
	{
		if (space[i] == 'A' && protspace[i] == 'T')
		{
			persent++;
		}
		else if (space[i] == 'T' && protspace[i] == 'A')
		{
			persent++;
		}
		else if (space[i] == 'C' && protspace[i] == 'G')
		{
			persent++;
		}
		else if (space[i] == 'G' && protspace[i] == 'C')
		{
			persent++;
		}
		else
		{			
			break;
		}
	}
	if (persent == 0)
	{
		return 0;
	}
	else
	{
		persent = persent / strlen(space);
		persent = round(persent * 100) / 100;
		persent = persent * 100;
		return persent;
	}
}
int main()
{

	setlocale(LC_ALL,"Russian");
	char lim[3];
	int j = 0;
	int flag=0;
	int n;
	char dnk[100][100];
	FILE *f;
	fopen_s(&f, "C:\\temp\\data.txt", "rt");

	for (int i = 0; !feof(f); i++)
	{
		fgets(dnk[i], 100, f);
		n = i;
	}

	n = n + 1;
	for (int i = 0; i < n; i++)
	{
		for (int k = 0; k < strlen(dnk[i]); k++)
		{
			dnk[i][k] = toupper(dnk[i][k]);
		}
	}

	char space[100];

	strncpy_s(space, dnk[0], strlen(dnk[0]) - 3);
	for (int i = 1; i < n; i++)
	{
		if (strlen(space) != strlen(dnk[i]))
		{
			printf("Длины строк не совпадают");
			return 0;
		}
	}

	for (int i = 0; i < strlen(space); i++)
	{
		if (space[i]!='A' && space[i]!='C' && space[i]!='G' && space[i]!='T')
		{
			printf("Данные введены некорректно");
			return 0;
		}
	}
	for (int i = 1; i < n; i++)
	{
		for (int k = 0; k < strlen(dnk[i]); k++)
		{
			if (dnk[i][k] != 'A' && dnk[i][k] != 'C' && dnk[i][k] != 'G' && dnk[i][k] != 'T')
			{
				printf("Данные введены некорректно");
				return 0;
			}
		}
	}
	int limit = atoi(lim);
	fclose(f);
	int persArr[100];

	for (int i = 1; i < n; i++)
	{
		persArr[i]=(int)equal(space, dnk[i]);	
	}	
	fopen_s(&f, "C:\\temp\\out.txt", "wt");
	fputs(space, f);
	fprintf(f, " %d%", limit);
	fprintf(f, "\n");
	for (int i = 1; i < n; i++)
	{
		if (persArr[i] >= limit)
		{
			fputs(dnk[i], f);
			fprintf(f, " %d%", limit);
			fprintf(f, "\n");
		}
	}
	fclose(f);
	return 0;
}


