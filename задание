#include "pch.h"
#include <iostream>
#include <stdio.h>
#include <Windows.h>
#include <ctime>
#include <cstdlib>
#include "classes.h"
using namespace std;

int main()
{
	setlocale(LC_ALL, "Russian");
	printf("Выбирете тип коллекции\nМассив(1)\nДвусвязный список(2)\nДвоичное дерево(3)\nДля выбора нужного типа коллекции введите номер соответствующего типа\n");
	int Type;
	int StartTime;
	int EndTime;
	int Time;
	int result=0;
	scanf_s("%d", &Type);
	if (Type == 1)
	{	

		StartTime = clock();
		WithArray.InitSize;
		WithArray.InitLimit;
		int* array = WithArray.InputArray(sizeOfArray);
		if (sizeof(collection) < SizeOfCollection * 4)
		{
			return 0;
		}
		for (int i = 0; i < SizeOfCollection; i++)
		{
			printf("%d", collection[i]);
		}
		result=CalculateArray(collection, Limit, SizeOfCollection);
		EndTime = clock();
		Time = EndTime - StartTime;
	}
	else if (Type == 2)
	{
		StartTime = clock();
		printf("Введите размер коллекции");
		printf("\n");
		scanf_s("%d", &SizeOfCollection);
		printf("Введите число с кототорым хотите сравнить элементы коллекции!");
		printf("\n");
		int Limit;
		scanf_s("%d", &Limit);
		printf("коллекция\n");
		struct List* list = create();
		for (int i = 0; i < SizeOfCollection; i++)
		{
			insert(list);
			if (insert(list))
			{
				printf("Данные введены некорректно");
				return 0;
			}
		}
		ScrollList(Limit, list);
		result=CalculatelList(Limit, list);
		EndTime = clock();
		Time = EndTime - StartTime;
	}
	else if (Type == 3)
	{
		StartTime = clock();
		printf("Введите размер коллекции");
		printf("\n");
		scanf_s("%d", &SizeOfCollection);
		printf("Введите число с кототорым хотите сравнить элементы коллекции!");
		printf("\n");
		int Limit;
		scanf_s("%d", &Limit);
		printf("коллекция\n");
		int val;

		for (int i = 0; i < SizeOfCollection; i++)
		{
			cin >> inputString;
			for (int j = 0; j < strlen(inputString); j++)
			{
				if ('0' > inputString[j] || inputString[j] > '9')
				{
					printf("Данные введены некорректно");
					return 0;
				}
			}
			val = atoi(inputString);
			
		}
		
		result=
		EndTime = clock();
		Time = EndTime - StartTime;
	}
	else
	{
		printf("Нет такого типа коллекции");
		return 0;
	}


	int Member;

	if (Type == 1)
	{
		Member = sizeof(inputString) + sizeof(int) * 8 + sizeof(int)*SizeOfCollection; //8 - Количество переменных используемых при выполнении задания с помощью массивов
	}
	else if (Type == 2)
	{
		Member = sizeof(inputString) + sizeof(int) * 8 + sizeof(List); // При помощи списков так же 8 переменных
	}
	else if (Type == 3)
	{
		Member = sizeof(inputString) + sizeof(int) * 8 + sizeof(Branch); //При помощи дерева 9 переменных
	}
	else
	{
		printf("Нет такого типа коллекции");
	}
	printf("\nКоличество чисел больше введённого: %d\nКоличество памяти требоемое для хранения данных: %d\nВремя выполнения операции: %d", result, Member, Time);
}
